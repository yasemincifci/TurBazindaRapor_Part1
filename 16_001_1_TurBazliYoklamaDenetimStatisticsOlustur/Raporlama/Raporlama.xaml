<Activity mc:Ignorable="sap sap2010" x:Class="Raporlama" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_dictDBConnections" Type="InArgument(scg:Dictionary(x:String, ui:DatabaseConnection))" />
    <x:Property Name="io_strListAttachments" Type="InOutArgument(scg:List(x:String))" />
  </x:Members>
  <this:Raporlama.in_dictDBConnections>
    <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:DatabaseConnection)" />
  </this:Raporlama.in_dictDBConnections>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1246.4,5676.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Raporlama_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="38">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="80">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="İlgili raporların oluşturulması için gerekli veritabanı, veri düzenleme ve görselleştirme işlemleri burada yapılır." DisplayName="Raporlama" sap:VirtualizedContainerService.HintSize="1256.8,5612" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strVBAFilePath" />
      <Variable x:TypeArguments="x:String" Name="strLastColName" />
      <Variable x:TypeArguments="x:String" Name="strSheetName" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="workbook" />
      <Variable x:TypeArguments="x:String" Name="strOutputFilePath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="1194.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[io_strListAttachments]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[new List(Of String)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1194.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strVBAFilePath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.Format(in_Config("FilePath_VBA").ToString,in_Config("logF_BusinessProcessName").ToString)]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="İllere Gore Yoklama" sap:VirtualizedContainerService.HintSize="1194.4,1780.8" sap2010:WorkflowViewState.IdRef="Sequence_216">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dtillereGoreYoklama" />
        <Variable x:TypeArguments="x:String" Name="strSQL" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="943.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;İllere Göre Yoklama raporu oluşturuluyor... &quot;]" />
      <Assign sap:VirtualizedContainerService.HintSize="943.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_277">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strOutputFilePath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.Format(in_Config("OutputFileName1").ToString,Today.AddMonths(-1).Year.ToString)]</InArgument>
        </Assign.Value>
      </Assign>
      <If sap2010:Annotation.AnnotationText="Şubat ayı ise yeni yıl için excel oluşturulur ve Sayfa1  onceki ayın adı olacak şekilde değiştirilir.&#xA;Eğer şubat ayı değil ise yeni sayfa oluşturulur ve önceki ayın adı olacak sekılde isimlendiirlir." Condition="[Today.ToString(&quot;MMMMM&quot;, new CultureInfo(&quot;tr-TR&quot;)).ToUpper.Equals(&quot;ŞUBAT&quot;)]" DisplayName="If: Rename Sheet" sap:VirtualizedContainerService.HintSize="943.2,287.2" sap2010:WorkflowViewState.IdRef="If_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_103">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Çıktı oluştur" sap:VirtualizedContainerService.HintSize="529.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_101">
              <Sequence.Variables>
                <Variable x:TypeArguments="si:FileInfo" Name="OutputFileInfo" />
                <Variable x:TypeArguments="x:String" Name="strFilePathTemplate" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Oluşturulacak çıktı ile aynı isimde dosya varsa sil" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_100">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_181">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strOutputFilePath]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.format(in_Config("OutputFileName1").ToString,Today.ToString("yyyy"))]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[File.Exists(strOutputFilePath)]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" sap:VirtualizedContainerService.HintSize="284,133" sap2010:WorkflowViewState.IdRef="Delete_3" Path="[strOutputFilePath]" />
                  </If.Then>
                </If>
              </Sequence>
              <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_182">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strFilePathTemplate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[String.Format(in_Config("FilePath_Template1").ToString,in_Config("logF_BusinessProcessName").ToString)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_183">
                <Assign.To>
                  <OutArgument x:TypeArguments="si:FileInfo">[OutputFileInfo]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="si:FileInfo">[New FileInfo(Path.Combine(strFilePathTemplate))]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;FolderPath_Output&quot;).ToString]" DisplayName="Copy Template File" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="CopyFile_8" Path="[OutputFileInfo.FullName]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CopyFile>
              <ui:RenameFileX DisplayName="Rename New File" FilePath="[in_Config(&quot;FolderPath_Output&quot;).ToString+OutputFileInfo.name]" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="RenameFileX_10" KeepExtension="False" NewName="[String.format(in_Config(&quot;OutputFileName1&quot;).ToString,Today.Year.ToString)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:RenameFileX>
            </Sequence>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="529.6,431.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_30" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,321.6" sap2010:WorkflowViewState.IdRef="Sequence_102">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_259">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[today.AddMonths(-1).ToString("MMMMM", new CultureInfo("tr-TR")).ToUpper]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="RenameSheet" EntryMethodParameters="[{&quot;Sayfa1&quot;, strSheetName}]" sap:VirtualizedContainerService.HintSize="433.6,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_65" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_3" Workbook="[workbook]" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_165">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="529.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_249">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strOutputFilePath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.format(in_Config("OutputFileName1").ToString,Today.ToString("yyyy"))]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="529.6,680.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_31" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,571.2" sap2010:WorkflowViewState.IdRef="Sequence_104">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="CreateNewSheet" EntryMethodParameters="[{today.AddMonths(-2).ToString(&quot;MMMMM&quot;, new CultureInfo(&quot;tr-TR&quot;)).ToUpper, today.AddMonths(-1).ToString(&quot;MMMMM&quot;, new CultureInfo(&quot;tr-TR&quot;)).ToUpper}]" sap:VirtualizedContainerService.HintSize="433.6,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_66" />
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_254">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[today.AddMonths(-1).ToString("MMMMM", new CultureInfo("tr-TR")).ToUpper]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_255">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[today.AddMonths(-2).ToString("MMMMM", new CultureInfo("tr-TR")).ToUpper]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="CopyPasteWithFormatDifferentSheets" EntryMethodParameters="[{strSourceSheetName, &quot;A1:AG1&quot;, strSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="433.6,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_103" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="529.6,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_4" Workbook="[workbook]" />
          </Sequence>
        </If.Else>
      </If>
      <ui:ReadTextFile File="{x:Null}" Content="[strSQL]" DisplayName="Read Text File : Yoklama-İllere Göre" FileName="[in_Config(&quot;FolderPath_SQL&quot;).ToString+&quot;Yoklama_İllereGöre.txt&quot;]" sap:VirtualizedContainerService.HintSize="943.2,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
      <ui:ExecuteQuery ContinueOnError="{x:Null}" CommandType="Text" DataTable="[dtillereGoreYoklama]" DisplayName="Run query: Yoklama-İllere Göre" ExistingDbConnection="[in_dictDBConnections(&quot;DRapor&quot;)]" sap:VirtualizedContainerService.HintSize="943.2,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_20" Sql="[String.Format(strSQL,New DateTime(Today.AddMonths(-1).Year, Today.AddMonths(-1).Month,1).ToString(&quot;yyyyMMdd&quot;),New DateTime(Today.Year, Today.Month,1).AddDays(-1).ToString(&quot;yyyyMMdd&quot;))]" TimeoutMS="3000000">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <Sequence DisplayName="Toplam Kolonu" sap:VirtualizedContainerService.HintSize="943.2,392.8" sap2010:WorkflowViewState.IdRef="Sequence_92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="TOPLAM" DataTable="[dtillereGoreYoklama]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="387.2,188" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:AddDataColumn>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtillereGoreYoklama]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="593.6,674.4" sap2010:WorkflowViewState.IdRef="Sequence_91">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="intKolonToplam" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="531.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_172">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intKolonToplam]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="531.2,319.2" sap2010:WorkflowViewState.IdRef="ForEach`1_34" Values="[Enumerable.Range(2,dtillereGoreYoklama.ColumnCount-3)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Int32">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,193.6" sap2010:WorkflowViewState.IdRef="Sequence_90">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_173">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intKolonToplam]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intKolonToplam + CInt(CurrentRow.Item(kolon).ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <Assign sap:VirtualizedContainerService.HintSize="531.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_174">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("TOPLAM")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[intKolonToplam]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </Sequence>
      <Sequence DisplayName="Toplam Satırı" sap:VirtualizedContainerService.HintSize="943.2,83.2" sap2010:WorkflowViewState.IdRef="Sequence_94">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_175">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataRow">[dtillereGoreYoklama.NewRow]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_176">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(0)]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">["TOPLAM"]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_177">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(1)]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">[""]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="ForEach`1_35" Values="[Enumerable.Range(2,dtillereGoreYoklama.ColumnCount-2)]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:Int32">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,374" sap2010:WorkflowViewState.IdRef="Sequence_93">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_178">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_179">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[dtillereGoreYoklama.AsEnumerable.Sum(Function(row) CInt(row.Item(kolon).ToString))]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_180">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(kolon)]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[intToplam]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
        <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtillereGoreYoklama]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="AddDataRow_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:AddDataRow>
      </Sequence>
      <Sequence DisplayName="Verinin Yazılması ve Hücre Biçimlendrme" sap:VirtualizedContainerService.HintSize="943.2,83.2" sap2010:WorkflowViewState.IdRef="Sequence_97">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" sap2010:Annotation.AnnotationText="il kodlarını içern kolon excelde yer alamığı için kaldırılır" ColumnIndex="1" DataTable="[dtillereGoreYoklama]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="433.6,112.8" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:RemoveDataColumn>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[dtillereGoreYoklama.ColumnCount]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="433.6,1268.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_14" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,1159" sap2010:WorkflowViewState.IdRef="Sequence_96">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtillereGoreYoklama]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_7" SheetName="[strSheetName]" StartingCell="A2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelWriteRange>
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA : Binlik sayı ayracı" EntryMethodName="ThousandNumberFormat" EntryMethodParameters="[{strSheetName, &quot;B2:&quot; + strLastColName + (dtillereGoreYoklama.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_60" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA : Kenarlık" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;A2:&quot; + strLastColName + (dtillereGoreYoklama.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_61" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA : Bold; Toplam Satırı" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A&quot; + (dtillereGoreYoklama.RowCount+1).ToString +&quot;:&quot; + strLastColName + (dtillereGoreYoklama.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_62" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA : Bold; Toplam Kolonu" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, strLastColName + &quot;2:&quot; + strLastColName + (dtillereGoreYoklama.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_63" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA : Bold; İller" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A2:A&quot; + (dtillereGoreYoklama.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_108" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Kolon genişliği" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, &quot;A1:&quot; + strLastColName + (dtillereGoreYoklama.RowCount+1).ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_109" />
                <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_1" Range="A1" SheetName="[strSheetName]" />
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,163" sap2010:WorkflowViewState.IdRef="Sequence_191">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[Today.ToString(&quot;MMMMM&quot;, new CultureInfo(&quot;tr-TR&quot;)).ToUpper.Equals(&quot;ŞUBAT&quot;)]" DisplayName="If: Şubat ayı ise safya1 silinir" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_9">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="400,199" sap2010:WorkflowViewState.IdRef="Sequence_95">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="DeleteSheet" EntryMethodParameters="[{&quot;Sayfa1&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_64" />
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
        <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[workbook]" />
      </Sequence>
      <AddToCollection x:TypeArguments="x:String" Collection="[io_strListAttachments]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="943.2,24.8" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[strOutputFilePath]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="943.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Excel: İllere Göre Yoklama tamamlandı. &quot; +Now.ToString]" />
    </Sequence>
    <Sequence DisplayName="EXCEL: İller Göre Yoklama Aylık" sap:VirtualizedContainerService.HintSize="1194.4,83.2" sap2010:WorkflowViewState.IdRef="Sequence_217">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dtillereGoreYoklamaAylik" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Excel: İllere Göre Yoklama Aylık başladı. &quot; +Now.ToString]" />
      <If sap2010:Annotation.AnnotationText="Şubat ayı ise yeni yıl için excel oluşturulur. Aylar kümülatif olarak tek sayfada oluşturulur" Condition="[Today.ToString(&quot;MMMMM&quot;, new CultureInfo(&quot;tr-TR&quot;)).ToUpper.Equals(&quot;ŞUBAT&quot;)]" DisplayName="If: Create excel / Rename Sheet" sap:VirtualizedContainerService.HintSize="433.6,112.8" sap2010:WorkflowViewState.IdRef="If_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="574.4,307.2" sap2010:WorkflowViewState.IdRef="Sequence_178">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap:VirtualizedContainerService.HintSize="512,195.2" sap2010:WorkflowViewState.IdRef="Sequence_114">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Çıktı oluştur" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_112">
                <Sequence.Variables>
                  <Variable x:TypeArguments="si:FileInfo" Name="OutputFileInfo" />
                  <Variable x:TypeArguments="x:String" Name="strFilePathTemplate" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Oluşturulacak çıktı ile aynı isimde dosya varsa sil" sap:VirtualizedContainerService.HintSize="496,286.4" sap2010:WorkflowViewState.IdRef="Sequence_111">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_190">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strOutputFilePath]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.format(in_Config("OutputFileName2").ToString,Today.ToString("yyyy"))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[File.Exists(strOutputFilePath)]" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="If_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" sap:VirtualizedContainerService.HintSize="283.2,134.4" sap2010:WorkflowViewState.IdRef="Delete_4" Path="[strOutputFilePath]" />
                    </If.Then>
                  </If>
                </Sequence>
                <Assign sap:VirtualizedContainerService.HintSize="496,81.6" sap2010:WorkflowViewState.IdRef="Assign_191">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strFilePathTemplate]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[String.Format(in_Config("FilePath_Template2").ToString,in_Config("logF_BusinessProcessName").ToString)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="496,81.6" sap2010:WorkflowViewState.IdRef="Assign_192">
                  <Assign.To>
                    <OutArgument x:TypeArguments="si:FileInfo">[OutputFileInfo]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="si:FileInfo">[New FileInfo(Path.Combine(strFilePathTemplate))]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;FolderPath_Output&quot;).ToString]" DisplayName="Copy File Template" sap:VirtualizedContainerService.HintSize="496,52.8" sap2010:WorkflowViewState.IdRef="CopyFile_9" Path="[OutputFileInfo.FullName]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CopyFile>
                <ui:RenameFileX DisplayName="Rename File Template" FilePath="[in_Config(&quot;FolderPath_Output&quot;).ToString+OutputFileInfo.name]" sap:VirtualizedContainerService.HintSize="496,52.8" sap2010:WorkflowViewState.IdRef="RenameFileX_11" KeepExtension="False" NewName="[String.format(in_Config(&quot;OutputFileName2&quot;).ToString,Today.ToString(&quot;yyyy&quot;))]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:RenameFileX>
              </Sequence>
            </Sequence>
          </Sequence>
        </If.Then>
        <If.Else>
          <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_250">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strOutputFilePath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.format(in_Config("OutputFileName2").ToString,Today.ToString("yyyy"))]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" CommandType="Text" DataTable="[dtillereGoreYoklamaAylik]" DisplayName="Run query2" ExistingDbConnection="[in_dictDBConnections(&quot;DRapor&quot;)]" sap:VirtualizedContainerService.HintSize="433.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_28" Sql="[String.Format(in_Config(&quot;SQL2&quot;).ToString,New DateTime(Datetime.Today.AddMonths(-1).Year, DateTime.Today.AddMonths(-1).Month,1).ToString(&quot;yyyyMMdd&quot;),New DateTime(Datetime.Today.Year, DateTime.Today.Month,1).AddDays(-1).ToString(&quot;yyyyMMdd&quot;))]" TimeoutMS="3000000">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_184">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[dtillereGoreYoklamaAylik.Columns(0).MaxLength]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">10</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_185">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dtillereGoreYoklamaAylik.Rows(0).Item(0)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[dtillereGoreYoklamaAylik.Rows(0).Item(0).ToString.Replace(Today.AddMonths(-1).ToString("yyyyMM"),Today.AddMonths(-1).ToString("MMMMM", new CultureInfo("tr-TR")))]</InArgument>
        </Assign.Value>
      </Assign>
      <Sequence DisplayName="Toplam Kolonu" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_107">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="TOPLAM" DataTable="[dtillereGoreYoklamaAylik]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:AddDataColumn>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtillereGoreYoklamaAylik]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,365" sap2010:WorkflowViewState.IdRef="Sequence_106">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="intKolonToplam" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_186">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intKolonToplam]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_36" Values="[Enumerable.Range(1,dtillereGoreYoklamaAylik.ColumnCount-2)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Int32">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_105">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_187">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intKolonToplam]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intKolonToplam + CInt(CurrentRow.Item(kolon).ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_188">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item("TOPLAM")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[intKolonToplam]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </Sequence>
      <Sequence DisplayName="Verinin Yazılması ve Biçimlendirilmesi" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_109">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_189">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">Sayfa1</InArgument>
          </Assign.Value>
        </Assign>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[dtillereGoreYoklamaAylik.ColumnCount]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="379,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_17" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_108">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Object" Name="firstEmptyRow" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: First Empty Row" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSheetName, &quot;A&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_67" OutputValue="[firstEmptyRow]" />
                <ui:InvokeVBA OutputValue="{x:Null}" sap2010:Annotation.AnnotationText="toplam kolonunun üzerine yeni ayı eklemek için row eklenir" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Add Row" EntryMethodName="AddRow" EntryMethodParameters="[{strSheetName, CStr((CInt(firstEmptyRow.ToString))-1) + &quot;:&quot; + CStr((CInt(firstEmptyRow.ToString))-1)}]" sap:VirtualizedContainerService.HintSize="338,130" sap2010:WorkflowViewState.IdRef="InvokeVBA_68">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeVBA>
                <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtillereGoreYoklamaAylik]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_8" SheetName="[strSheetName]" StartingCell="[&quot;A&quot; + (CInt(firstEmptyRow.ToString)-1).ToString]" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Sum of  rows for each columns " EntryMethodName="RangeColumnSum" EntryMethodParameters="[{strSheetName, &quot;B&quot; + firstEmptyRow.ToString, ((CInt(firstEmptyRow.ToString))-2), 1, &quot;B&quot;+ firstEmptyRow.ToString + &quot;:AG&quot; + firstEmptyRow.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_69" />
                <If sap2010:Annotation.AnnotationText="yıl başında eklenen row başlıkların avi rengide eklendiği için owlar beyaz olarak değiştirilir." Condition="[Today.ToString(&quot;MMMMM&quot;, new CultureInfo(&quot;tr-TR&quot;)).ToUpper.Equals(&quot;ŞUBAT&quot;)]" sap:VirtualizedContainerService.HintSize="338,124" sap2010:WorkflowViewState.IdRef="If_22">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Beyaz Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A2:AG2&quot;,255,255,255}]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_72" />
                  </If.Then>
                </If>
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Kenarlık" EntryMethodName="AllAndThickBorders" EntryMethodParameters="[{strSheetName, &quot;A2:&quot;+ strLastColName + firstEmptyRow.ToString}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_73" />
                <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_2" Range="A1" SheetName="[strSheetName]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelSelectRange>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
        <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="379,52" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[workbook]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelCloseWorkbook>
      </Sequence>
      <AddToCollection x:TypeArguments="x:String" Collection="[io_strListAttachments]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="400,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[strOutputFilePath]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Excel: İllere Göre Yoklama Aylık tamamlandı. &quot; +Now.ToString]" />
    </Sequence>
    <Sequence DisplayName="EXCEL: İllere Göre Denetim Sayilari ve Cezalari" sap:VirtualizedContainerService.HintSize="1194.4,3035.2" sap2010:WorkflowViewState.IdRef="Sequence_189">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dtDenetimSayilari" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtDenetimCezalari" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtSehirAdi" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtOneColumn" />
        <Variable x:TypeArguments="x:Int32" Name="intColIndex" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1132,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Excel: İllere Göre Denetim Sayilari ve Cezalari başladı. &quot; +Now.ToString]" />
      <Assign sap:VirtualizedContainerService.HintSize="1132,81.6" sap2010:WorkflowViewState.IdRef="Assign_262">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">HAZIRAN</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="1132,81.6" sap2010:WorkflowViewState.IdRef="Assign_263">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strOutputFilePath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.format(in_Config("OutputFileName3").ToString,Today.ToString("yyyy"))]</InArgument>
        </Assign.Value>
      </Assign>
      <If sap2010:Annotation.AnnotationText="Şubat ayı ise yeni yıl için excel oluşturulur ve Sayfa1  onceki ayın adı olacak şekilde değiştirilir.&#xA;Eğer şubat ayı değil ise yeni sayfa oluşturulur ve önceki ayın adı olacak sekılde isimlendiirlir." Condition="[Today.ToString(&quot;MMMMM&quot;, new CultureInfo(&quot;tr-TR&quot;)).ToUpper.Equals(&quot;ŞUBAT&quot;)]" DisplayName="If: Create excel / Rename Sheet" sap:VirtualizedContainerService.HintSize="1132,970.4" sap2010:WorkflowViewState.IdRef="If_27">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="592,766.4" sap2010:WorkflowViewState.IdRef="Sequence_142">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Çıktı oluştur" sap:VirtualizedContainerService.HintSize="529.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_140">
              <Sequence.Variables>
                <Variable x:TypeArguments="si:FileInfo" Name="OutputFileInfo" />
                <Variable x:TypeArguments="x:String" Name="strFilePathTemplate" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Oluşturulacak çıktı ile aynı isimde dosya varsa sil" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_139">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_224">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strOutputFilePath]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.format(in_Config("OutputFileName3").ToString,Today.ToString("yyyy"))]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[File.Exists(strOutputFilePath)]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" sap:VirtualizedContainerService.HintSize="284,133" sap2010:WorkflowViewState.IdRef="Delete_5" Path="[strOutputFilePath]" />
                  </If.Then>
                </If>
              </Sequence>
              <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_225">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strFilePathTemplate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[String.Format(in_Config("FilePath_Template3").ToString,in_Config("logF_BusinessProcessName").ToString)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_226">
                <Assign.To>
                  <OutArgument x:TypeArguments="si:FileInfo">[OutputFileInfo]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="si:FileInfo">[New FileInfo(Path.Combine(strFilePathTemplate))]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;FolderPath_Output&quot;).ToString]" DisplayName="Copy File Template" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="CopyFile_10" Path="[OutputFileInfo.FullName]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CopyFile>
              <ui:RenameFileX DisplayName="Rename File Template" FilePath="[in_Config(&quot;FolderPath_Output&quot;).ToString+OutputFileInfo.name]" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="RenameFileX_12" KeepExtension="False" NewName="[String.format(in_Config(&quot;OutputFileName3&quot;).ToString,Today.ToString(&quot;yyyy&quot;))]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:RenameFileX>
            </Sequence>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="529.6,431.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_22" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,321.6" sap2010:WorkflowViewState.IdRef="Sequence_141">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_260">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[today.AddMonths(-1).ToString("MMMMM", new CultureInfo("tr-TR")).ToUpper]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="RenameSheet" EntryMethodParameters="[{&quot;Sayfa1&quot;, strSheetName}]" sap:VirtualizedContainerService.HintSize="433.6,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_83" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="529.6,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_5" Workbook="[workbook]" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="496,386.4" sap2010:WorkflowViewState.IdRef="Sequence_167">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_251">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strOutputFilePath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.format(in_Config("OutputFileName3").ToString,Today.ToString("yyyy"))]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_23" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="496,571.2" sap2010:WorkflowViewState.IdRef="Sequence_144">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="strSourceSheetName" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_257">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[today.AddMonths(-1).ToString("MMMMM", new CultureInfo("tr-TR")).ToUpper]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_258">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strSourceSheetName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[today.AddMonths(-2).ToString("MMMMM", new CultureInfo("tr-TR")).ToUpper]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="CreateNewSheet" EntryMethodParameters="[{strSourceSheetName, strSheetName}]" sap:VirtualizedContainerService.HintSize="433.6,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_84">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeVBA>
                    <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="CopyPasteWithFormatDifferentSheets" EntryMethodParameters="[{strSourceSheetName, &quot;A1:AG1&quot;, strSheetName, &quot;A1&quot;}]" sap:VirtualizedContainerService.HintSize="433.6,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_104" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_6" Workbook="[workbook]" />
          </Sequence>
        </If.Else>
      </If>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" CommandType="Text" DataTable="[dtDenetimSayilari]" DisplayName="Run query: Sayi (Sorgu3)" ExistingDbConnection="[in_dictDBConnections(&quot;DRapor&quot;)]" sap:VirtualizedContainerService.HintSize="1132,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_37" Sql="[String.Format(in_Config(&quot;SQL3&quot;).ToString,New DateTime(Datetime.Today.AddMonths(-1).Year, DateTime.Today.AddMonths(-1).Month,1).ToString(&quot;yyyyMMdd&quot;),New DateTime(Datetime.Today.Year, DateTime.Today.Month,1).AddDays(-1).ToString(&quot;yyyyMMdd&quot;))]" TimeoutMS="3000000">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" CommandType="Text" DataTable="[dtDenetimCezalari]" DisplayName="Run query: Ceza (Sorgu4)" ExistingDbConnection="[in_dictDBConnections(&quot;DRapor&quot;)]" sap:VirtualizedContainerService.HintSize="1132,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_38" Sql="[String.Format(in_Config(&quot;SQL4&quot;).ToString,New DateTime(Datetime.Today.AddMonths(-1).Year, DateTime.Today.AddMonths(-1).Month,1).ToString(&quot;yyyyMMdd&quot;),New DateTime(Datetime.Today.Year, DateTime.Today.Month,1).AddDays(-1).ToString(&quot;yyyyMMdd&quot;))]" TimeoutMS="3000000">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <If sap2010:Annotation.AnnotationText="ceza ve sayilardan dönen şehirler farklanıyor.&#xA;iki sorgu sonucu içinde sehirler eşitlenir" Condition="[dtDenetimCezalari.RowCount &gt;= dtDenetimSayilari.RowCount]" DisplayName="If: Şehir Adlari" sap:VirtualizedContainerService.HintSize="400,124" sap2010:WorkflowViewState.IdRef="If_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_197">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtDenetimCezalari]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEachRow_14">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,264" sap2010:WorkflowViewState.IdRef="Sequence_198">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="varmi" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_264">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[varmi]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">[dtDenetimSayilari.AsEnumerable.Any(function(k) k.Item(0).ToString.Trim.Equals(CurrentRow.Item(0).ToString.Trim))]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[varmi = True]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_200">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_265">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataRow">[dtDenetimSayilari.NewRow]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_266">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(0)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[CurrentRow.Item(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_267">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(1)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[CurrentRow.Item(1)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtDenetimSayilari]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AddDataRow>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_205">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtDenetimSayilari]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEachRow_16">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,264" sap2010:WorkflowViewState.IdRef="Sequence_203">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="varmi" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_268">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[varmi]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">[dtDenetimCezalari.AsEnumerable.Any(function(k) k.Item(0).ToString.Trim.Equals(CurrentRow.Item(0).ToString.Trim))]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[varmi = True]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_24">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_202">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_269">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataRow">[dtDenetimCezalari.NewRow]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_270">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(0)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[CurrentRow.Item(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_271">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(1)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[CurrentRow.Item(1)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtDenetimCezalari]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AddDataRow>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
          </Sequence>
        </If.Else>
      </If>
      <Assign DisplayName="Assign: Plakaya göre sıralama" sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_272">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[dtDenetimCezalari]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[dtDenetimCezalari.AsEnumerable.OrderBy(function(k) k.Item(1).ToString).CopyToDataTable]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign: Plakaya göre sıralama" sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_273">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[dtDenetimSayilari]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[dtDenetimSayilari.AsEnumerable.OrderBy(function(k) k.Item(1).ToString).CopyToDataTable]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_276">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[dtSehirAdi]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[dtDenetimCezalari.DefaultView.ToTable(True, "AD")]</InArgument>
        </Assign.Value>
      </Assign>
      <Sequence DisplayName="BIRIM Kolonunun Kaldırılması" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_130">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="1" DataTable="[dtDenetimCezalari]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:RemoveDataColumn>
        <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="1" DataTable="[dtDenetimSayilari]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:RemoveDataColumn>
      </Sequence>
      <ui:BuildDataTable DataTable="[dtOneColumn]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Column1&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
      <Sequence DisplayName="Denetim Sayiları" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_121">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="cezada gelen sayıda gelmeyen şehirler için  yazdırılır" DataTable="[dtDenetimSayilari]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="400,94" sap2010:WorkflowViewState.IdRef="ForEachRow_19">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,163" sap2010:WorkflowViewState.IdRef="Sequence_215">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ForEach`1_47" Values="[Enumerable.Range(1,dtDenetimSayilari.ColumnCount-1)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Int32">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,163" sap2010:WorkflowViewState.IdRef="Sequence_214">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[CurrentRow.Item(kolon).ToString.Trim.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_26">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_212">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_275">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item(kolon)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[0]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_213">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
        <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_194">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[intColIndex]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">2</InArgument>
          </Assign.Value>
        </Assign>
        <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="bir kolon atlanarak denetim sayıları ait oldukları hücreye yazırılır" DisplayName="For Each: Verilerin yazdırılamsı" sap:VirtualizedContainerService.HintSize="400,94" sap2010:WorkflowViewState.IdRef="ForEach`1_37" Values="[Enumerable.Range(1,dtDenetimSayilari.ColumnCount-1)]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:Int32">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,1122" sap2010:WorkflowViewState.IdRef="Sequence_117">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtDenetimSayilari]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,481" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,365" sap2010:WorkflowViewState.IdRef="Sequence_116">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_195">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow">[dtOneColumn.NewRow]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_196">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(0)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[CurrentRow.Item(kolon)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtOneColumn]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:AddDataRow>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intColIndex]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:WriteRange AddHeaders="False" DataTable="[dtOneColumn]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[strSheetName]" StartingCell="[strLastColName + &quot;2&quot;]" WorkbookPath="[strOutputFilePath]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:WriteRange>
                <ui:ClearDataTable DataTable="[dtOneColumn]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_1" />
                <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_197">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intColIndex]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[intColIndex + 2]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
        <Sequence sap2010:Annotation.AnnotationText="denetim sayılarına ait toplam olusturularak toplam kolonuna yazdırılır" DisplayName="Toplam Kolonu" sap:VirtualizedContainerService.HintSize="400,123" sap2010:WorkflowViewState.IdRef="Sequence_120">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtDenetimSayilari]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="532,919" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="498,803" sap2010:WorkflowViewState.IdRef="Sequence_119">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="436,61" sap2010:WorkflowViewState.IdRef="Assign_198">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[dtOneColumn.NewRow]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="436,61" sap2010:WorkflowViewState.IdRef="Assign_199">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="436,297" sap2010:WorkflowViewState.IdRef="ForEach`1_38" Values="[Enumerable.Range(1,dtDenetimSayilari.ColumnCount-1)]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:Int32">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_118">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_200">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[intToplam + CInt(CurrentRow.Item(kolon).ToString)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                  <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="436,61" sap2010:WorkflowViewState.IdRef="Assign_201">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(0)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtOneColumn]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="436,52" sap2010:WorkflowViewState.IdRef="AddDataRow_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="532,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intColIndex]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:WriteRange AddHeaders="False" DataTable="[dtOneColumn]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="532,116" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="[strSheetName]" StartingCell="[strLastColName + &quot;2&quot;]" WorkbookPath="[strOutputFilePath]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:WriteRange>
          <ui:ClearDataTable DataTable="[dtOneColumn]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="532,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_2" />
        </Sequence>
      </Sequence>
      <Sequence DisplayName="Denetim Cezaları" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_127">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="sayida gelen cezada gelmeen şehirler için  yazdırılır" DataTable="[dtDenetimCezalari]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="400,94" sap2010:WorkflowViewState.IdRef="ForEachRow_18">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="498,317" sap2010:WorkflowViewState.IdRef="Sequence_208">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="436,206" sap2010:WorkflowViewState.IdRef="ForEach`1_45" Values="[Enumerable.Range(1,dtDenetimCezalari.ColumnCount-1)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Int32">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_209">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[CurrentRow.Item(kolon).ToString.Trim.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_25">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_210">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_274">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[CurrentRow.Item(kolon)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[0]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_211">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
        <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_202">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[intColIndex]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">3</InArgument>
          </Assign.Value>
        </Assign>
        <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="bir kolon atlanarak denetim cezaları ait oldukları hücreye yazırılır" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="400,109" sap2010:WorkflowViewState.IdRef="ForEach`1_39" Values="[Enumerable.Range(1,dtDenetimCezalari.ColumnCount-1)]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:Int32">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="441,693" sap2010:WorkflowViewState.IdRef="Sequence_123">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtDenetimCezalari]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="379,52" sap2010:WorkflowViewState.IdRef="ForEachRow_10">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,365" sap2010:WorkflowViewState.IdRef="Sequence_122">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_203">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow">[dtOneColumn.NewRow]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_204">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(0)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[CurrentRow.Item(kolon)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtOneColumn]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:AddDataRow>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intColIndex]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:WriteRange AddHeaders="False" DataTable="[dtOneColumn]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="379,116" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="[strSheetName]" StartingCell="[strLastColName + &quot;2&quot;]" WorkbookPath="[strOutputFilePath]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:WriteRange>
                <ui:ClearDataTable DataTable="[dtOneColumn]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="379,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_3" />
                <Assign sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_205">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intColIndex]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[intColIndex + 2]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
        <Sequence sap2010:Annotation.AnnotationText="denetim cezalrına ait toplam olusturularak toplam kolonuna yazdırılır" DisplayName="Toplam Kolonu" sap:VirtualizedContainerService.HintSize="400,123" sap2010:WorkflowViewState.IdRef="Sequence_126">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtDenetimCezalari]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,197" sap2010:WorkflowViewState.IdRef="ForEachRow_11">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,558" sap2010:WorkflowViewState.IdRef="Sequence_125">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                    <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_206">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[dtOneColumn.NewRow]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_207">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="436,297" sap2010:WorkflowViewState.IdRef="ForEach`1_40" Values="[Enumerable.Range(1,dtDenetimCezalari.ColumnCount-1)]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:Int32">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_124">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_208">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[intToplam + CInt(CurrentRow.Item(kolon).ToString)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                  <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_209">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[drNewRow.Item(0)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[intToplam]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtOneColumn]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="AddDataRow_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
          </ui:ForEachRow>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intColIndex]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:WriteRange AddHeaders="False" DataTable="[dtOneColumn]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="WriteRange_4" SheetName="[strSheetName]" StartingCell="[strLastColName + &quot;2&quot;]" WorkbookPath="[strOutputFilePath]" />
          <ui:ClearDataTable DataTable="[dtOneColumn]" DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_4" />
        </Sequence>
      </Sequence>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Şehir Adı / Hücre Biçimlendirme" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_20" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="441,1749" sap2010:WorkflowViewState.IdRef="Sequence_128">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intColIndex]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[dtSehirAdi]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_9" SheetName="[strSheetName]" StartingCell="A2" />
              <ui:ExcelWriteCell Cell="[&quot;A&quot; + (dtSehirAdi.RowCount +2).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="[strSheetName]" Text="Toplam" />
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Sum of whole columns" EntryMethodName="RangeColumnSum" EntryMethodParameters="[{strSheetName, &quot;B&quot; + (dtSehirAdi.RowCount+2).ToString, (dtSehirAdi.RowCount).ToString, 1, &quot;B&quot;+ (dtSehirAdi.RowCount+2).ToString + &quot;:&quot; + strLastColName + (dtSehirAdi.RowCount+2).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_74" />
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Bold; Toplam Satırı" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A&quot; + (dtSehirAdi.RowCount+2).ToString + &quot;:&quot; + strLastColName + (dtSehirAdi.RowCount+2).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_75" />
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Bold; Toplam Kolonu 2" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, strLastColName + &quot;2:&quot;+ strLastColName + (dtSehirAdi.RowCount+2).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_110" />
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Bold; İller" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, &quot;A2:A&quot; +(dtSehirAdi.RowCount+2).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_107" />
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Binlik Ayraç" EntryMethodName="ThousandNumberFormat" EntryMethodParameters="[{strSheetName, &quot;A2:&quot; + strLastColName + (dtSehirAdi.RowCount+2).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_76" />
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Kolon Genişliği" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, &quot;A1:&quot; + strLastColName + (dtSehirAdi.RowCount+2).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_77" />
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Kenarlık" EntryMethodName="AllBordersThinThick" EntryMethodParameters="[{strSheetName, &quot;A2:&quot; + strLastColName + (dtSehirAdi.RowCount+2).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_105" />
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intColIndex -1]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Bold; Toplam Kolonu 1" EntryMethodName="Bold" EntryMethodParameters="[{strSheetName, strLastColName + &quot;2:&quot;+ strLastColName + (dtSehirAdi.RowCount+2).ToString}]" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_111" />
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="379,52" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_3" Range="A1" SheetName="[strSheetName]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelSelectRange>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="400,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_7" Workbook="[workbook]" />
      <AddToCollection x:TypeArguments="x:String" Collection="[io_strListAttachments]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="400,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[strOutputFilePath]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Excel: İllere Göre Denetim Sayilari ve Cezalari  tamamlandı. &quot; +Now.ToString]" />
    </Sequence>
    <Sequence DisplayName="EXCEL: Denetim Sayi ve Cezalari Aylık" sap:VirtualizedContainerService.HintSize="1194.4,83.2" sap2010:WorkflowViewState.IdRef="Sequence_190">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dtDenetimSayilari" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtDenetimCezalari" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="707,92" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Excel: Denetim Sayi ve Cezalari Aylık başladı. &quot; +Now.ToString]" />
      <If sap2010:Annotation.AnnotationText="Şubat ayı ise yeni yıl için excel oluşturulur ve Sayfa1  onceki ayın adı olacak şekilde değiştirilir.&#xA;Eğer şubat ayı değil ise yeni sayfa oluşturulur ve önceki ayın adı olacak sekılde isimlendiirlir." Condition="[Today.ToString(&quot;MMMMM&quot;, new CultureInfo(&quot;tr-TR&quot;)).ToUpper.Equals(&quot;ŞUBAT&quot;)]" DisplayName="If: Create excel / Rename Sheet" sap:VirtualizedContainerService.HintSize="707,282" sap2010:WorkflowViewState.IdRef="If_17">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Çıktı oluştur" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_146">
            <Sequence.Variables>
              <Variable x:TypeArguments="si:FileInfo" Name="OutputFileInfo" />
              <Variable x:TypeArguments="x:String" Name="strFilePathTemplate" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Oluşturulacak çıktı ile aynı isimde dosya varsa sil" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_145">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_227">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strOutputFilePath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.format(in_Config("OutputFileName4").ToString,Today.ToString("yyyy"))]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[File.Exists(strOutputFilePath)]" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" sap:VirtualizedContainerService.HintSize="284,133" sap2010:WorkflowViewState.IdRef="Delete_6" Path="[strOutputFilePath]" />
                </If.Then>
              </If>
            </Sequence>
            <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_228">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strFilePathTemplate]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Format(in_Config("FilePath_Template4").ToString,in_Config("logF_BusinessProcessName").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_229">
              <Assign.To>
                <OutArgument x:TypeArguments="si:FileInfo">[OutputFileInfo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="si:FileInfo">[New FileInfo(Path.Combine(strFilePathTemplate))]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;FolderPath_Output&quot;).ToString]" DisplayName="Copy File Template" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="CopyFile_11" Path="[OutputFileInfo.FullName]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CopyFile>
            <ui:RenameFileX DisplayName="Rename File Template" FilePath="[in_Config(&quot;FolderPath_Output&quot;).ToString+OutputFileInfo.name]" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="RenameFileX_13" KeepExtension="False" NewName="[String.format(in_Config(&quot;OutputFileName4&quot;).ToString,Today.ToString(&quot;yyyy&quot;))]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:RenameFileX>
          </Sequence>
        </If.Then>
        <If.Else>
          <Assign sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_252">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strOutputFilePath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("FolderPath_Output").ToString+String.format(in_Config("OutputFileName4").ToString,Today.ToString("yyyy"))]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" CommandType="Text" DataTable="[dtDenetimSayilari]" DisplayName="Run query: Sayi (Sorgu5)" ExistingDbConnection="[in_dictDBConnections(&quot;DRapor&quot;)]" sap:VirtualizedContainerService.HintSize="707,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_31" Sql="[String.Format(in_Config(&quot;SQL5&quot;).ToString,New DateTime(Datetime.Today.AddMonths(-1).Year, DateTime.Today.AddMonths(-1).Month,1).ToString(&quot;yyyyMMdd&quot;),New DateTime(Datetime.Today.Year, DateTime.Today.Month,1).AddDays(-1).ToString(&quot;yyyyMMdd&quot;))]" TimeoutMS="3000000">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" CommandType="Text" DataTable="[dtDenetimCezalari]" DisplayName="Run query: Ceza(Sorgu6)" ExistingDbConnection="[in_dictDBConnections(&quot;DRapor&quot;)]" sap:VirtualizedContainerService.HintSize="707,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_32" Sql="[String.Format(in_Config(&quot;SQL6&quot;).ToString,New DateTime(Datetime.Today.AddMonths(-1).Year, DateTime.Today.AddMonths(-1).Month,1).ToString(&quot;yyyyMMdd&quot;),New DateTime(Datetime.Today.Year, DateTime.Today.Month,1).AddDays(-1).ToString(&quot;yyyyMMdd&quot;))]" TimeoutMS="3000000">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <Assign sap:VirtualizedContainerService.HintSize="707,61" sap2010:WorkflowViewState.IdRef="Assign_214">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">Sayfa1</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: Verini yazılması ve Hücre Bçimlendirme" sap:VirtualizedContainerService.HintSize="707,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_21" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="503,1292" sap2010:WorkflowViewState.IdRef="Sequence_137">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Object" Name="firstEmptyRow" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Row Ekleme" sap:VirtualizedContainerService.HintSize="441,583" sap2010:WorkflowViewState.IdRef="Sequence_132">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: First Empty Row" EntryMethodName="FirstEmptyRow" EntryMethodParameters="[{strSheetName, &quot;A&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_78" OutputValue="[firstEmptyRow]" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Add Row" EntryMethodName="AddRow" EntryMethodParameters="[{strSheetName, CStr((CInt(firstEmptyRow.ToString))-1) + &quot;:&quot; + CStr((CInt(firstEmptyRow.ToString))-1)}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_79" />
                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Beyaz Renk" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, &quot;A2:AG2&quot;,255,255,255}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_80" />
                <ui:ExcelWriteCell Cell="[&quot;A&quot; + CStr((CInt(firstEmptyRow.ToString)-1))]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[strSheetName]" Text="[Today.AddMonths(-1).ToString(&quot;MMMMM&quot;, New CultureInfo(&quot;tr-TR&quot;))]" />
              </Sequence>
              <Sequence DisplayName="Denetim Sayiları" sap:VirtualizedContainerService.HintSize="441,81" sap2010:WorkflowViewState.IdRef="Sequence_134">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
                  <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                  <Variable x:TypeArguments="x:Int32" Name="intColIndex" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_215">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intColIndex]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">2</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_216">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="379,52" sap2010:WorkflowViewState.IdRef="ForEach`1_41" Values="[Enumerable.Range(1,dtDenetimSayilari.ColumnCount-1)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Int32">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="441,554" sap2010:WorkflowViewState.IdRef="Sequence_133">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intColIndex]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:ExcelWriteCell Cell="[strLastColName + CStr((CInt(firstEmptyRow.ToString)-1))]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="[strSheetName]" Text="[dtDenetimSayilari.Rows(0).Item(kolon).ToString]" />
                        <Assign sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_217">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intToplam + CInt(dtDenetimSayilari.Rows(0).Item(kolon).ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_218">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intColIndex]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intColIndex + 2]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intColIndex]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:ExcelWriteCell Cell="[strLastColName + CStr((CInt(firstEmptyRow.ToString)-1))]" DisplayName="Write Cell: Toplam Kolonuna Yazdırma" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="[strSheetName]" Text="[intToplam.ToString]" />
              </Sequence>
              <Sequence DisplayName="Denetim Cezaları" sap:VirtualizedContainerService.HintSize="441,81" sap2010:WorkflowViewState.IdRef="Sequence_136">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                  <Variable x:TypeArguments="x:Int32" Name="intColIndex" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_219">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intColIndex]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">3</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_220">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="379,52" sap2010:WorkflowViewState.IdRef="ForEach`1_42" Values="[Enumerable.Range(1,dtDenetimCezalari.ColumnCount-1)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Int32">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="kolon" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="441,554" sap2010:WorkflowViewState.IdRef="Sequence_135">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intColIndex]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:ExcelWriteCell Cell="[strLastColName + CStr((CInt(firstEmptyRow.ToString)-1))]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="[strSheetName]" Text="[dtDenetimCezalari.Rows(0).Item(kolon).ToString]" />
                        <Assign sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_221">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intToplam + CInt(dtDenetimCezalari.Rows(0).Item(kolon).ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="Assign_223">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intColIndex]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intColIndex + 2]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="379,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intColIndex]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:ExcelWriteCell Cell="[strLastColName + CStr((CInt(firstEmptyRow.ToString)-1))]" DisplayName="Write Cell: Toplam Kolonuna Yazdırma" sap:VirtualizedContainerService.HintSize="379,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="[strSheetName]" Text="[intToplam.ToString]" />
              </Sequence>
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Sum of whole " EntryMethodName="RangeColumnSum" EntryMethodParameters="[{strSheetName, &quot;B&quot; + firstEmptyRow.ToString, ((CInt(firstEmptyRow.ToString))-2), 1, &quot;B&quot;+ firstEmptyRow.ToString + &quot;:&quot; + strLastColName + firstEmptyRow.ToString}]" sap:VirtualizedContainerService.HintSize="441,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_81" />
              <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: " EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, &quot;A1&quot; + &quot;:&quot; + strLastColName + firstEmptyRow.ToString}]" sap:VirtualizedContainerService.HintSize="441,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_82" />
              <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="441,60" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_4" Range="A1" SheetName="[strSheetName]" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="707,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_8" Workbook="[workbook]" />
      <AddToCollection x:TypeArguments="x:String" Collection="[io_strListAttachments]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="707,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[strOutputFilePath]" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="707,92" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Excel: Denetim Sayi ve Cezalari Aylık  tamamlandı. &quot; +Now.ToString]" />
    </Sequence>
    <Sequence DisplayName="EXCEL: Kümülatif Yıllık" sap:VirtualizedContainerService.HintSize="1194.4,83.2" sap2010:WorkflowViewState.IdRef="Sequence_158">
      <Sequence.Variables>
        <Variable x:TypeArguments="si:FileInfo" Name="OutputFileInfo" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If sap2010:Annotation.AnnotationText="Çalıştığı ay ocak ayı ise gecmiş yılın kümülatifi oluşturulur" Condition="[Today.ToString(&quot;MMMMM&quot;, new CultureInfo(&quot;tr-TR&quot;)).ToUpper.Equals(&quot;OCAK&quot;)]" DisplayName="If:  Yıllık Kümülatif Toplam" sap:VirtualizedContainerService.HintSize="538,1029" sap2010:WorkflowViewState.IdRef="If_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Sequence: Yıllık Kümülatif Toplam" sap:VirtualizedContainerService.HintSize="502,810" sap2010:WorkflowViewState.IdRef="Sequence_157">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="dtDenetim" />
              <Variable x:TypeArguments="sd:DataTable" Name="dtYoklama" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="440,61" sap2010:WorkflowViewState.IdRef="Assign_261">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strOutputFilePath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.format(in_Config("FilePath_Template5").ToString,in_Config("logF_BusinessProcessName"))]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExecuteQuery ContinueOnError="{x:Null}" CommandType="Text" DataTable="[dtDenetim]" DisplayName="Run query: Denetim (Sorgu7)" ExistingDbConnection="[in_dictDBConnections(&quot;DRapor&quot;)]" sap:VirtualizedContainerService.HintSize="440,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_33" Sql="[String.Format(in_Config(&quot;SQL7&quot;).ToString,New DateTime(Datetime.Today.AddMonths(-1).Year, DateTime.Today.AddMonths(-1).Month,1).ToString(&quot;yyyyMMdd&quot;),New DateTime(Datetime.Today.Year, DateTime.Today.Month,1).AddDays(-1).ToString(&quot;yyyyMMdd&quot;))]" TimeoutMS="3000000">
              <ui:ExecuteQuery.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:ExecuteQuery.Parameters>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExecuteQuery>
            <ui:ExecuteQuery ContinueOnError="{x:Null}" CommandType="Text" DataTable="[dtYoklama]" DisplayName="Run query: Yoklama (Sorgu8)" ExistingDbConnection="[in_dictDBConnections(&quot;DRapor&quot;)]" sap:VirtualizedContainerService.HintSize="440,89" sap2010:WorkflowViewState.IdRef="ExecuteQuery_34" Sql="[String.Format(in_Config(&quot;SQL8&quot;).ToString,New DateTime(Datetime.Today.AddMonths(-1).Year, DateTime.Today.AddMonths(-1).Month,1).ToString(&quot;yyyyMMdd&quot;),New DateTime(Datetime.Today.Year, DateTime.Today.Month,1).AddDays(-1).ToString(&quot;yyyyMMdd&quot;))]" TimeoutMS="3000000">
              <ui:ExecuteQuery.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:ExecuteQuery.Parameters>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExecuteQuery>
            <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="0" DataTable="[dtYoklama]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="440,52" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:RemoveDataColumn>
            <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="" DisplayName="Excel Application Scope: Verilerin yazılması ve hücre biçimlendirme" sap:VirtualizedContainerService.HintSize="440,83" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_26" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[strOutputFilePath]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="524,313" sap2010:WorkflowViewState.IdRef="Sequence_153">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Object" Name="objFindTex" />
                      <Variable x:TypeArguments="x:Int32" Name="intColNumber" />
                      <Variable x:TypeArguments="x:Int32" Name="intToplam" />
                      <Variable x:TypeArguments="x:Int32" Name="intColIndex" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Yoklama Verisi" sap:VirtualizedContainerService.HintSize="462,81" sap2010:WorkflowViewState.IdRef="Sequence_185">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_230">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Kumulatif_Yoklama</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_231">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="findText" EntryMethodParameters="[{&quot;01.&quot; + Today.AddMonths(-1).ToString(&quot;yyyy&quot;) + &quot;-&quot; + &quot;12.&quot; +Today.AddMonths(-1).ToString(&quot;yyyy&quot;), strSheetName, &quot;A2:TY2&quot;}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_87" OutputValue="[objFindTex]" />
                      <If sap2010:Annotation.AnnotationText="A2:TX2 arasında arama yapılıyor. substring buna göra yazıldı" Condition="[objFindTex.ToString.Length = 2]" DisplayName="If: verini bulunduğu son kolon harfini" sap:VirtualizedContainerService.HintSize="400,94" sap2010:WorkflowViewState.IdRef="If_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_232">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strLastColName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[objFindTex.ToString.Substring(0,1)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Assign sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_233">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strLastColName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[objFindTex.ToString.Substring(0,2)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intColIndex]</OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intColIndex+1]</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:ExcelWriteCell Cell="[strLastColName + &quot;2&quot;]" DisplayName="Write Cell: 01.yyyy-12.yyyy seklınde yıl yazılır" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="[strSheetName]" Text="[&quot;01.&quot; + Today.AddMonths(-1).ToString(&quot;yyyy&quot;) + &quot;-&quot; + &quot;12.&quot; +Today.AddMonths(-1).ToString(&quot;yyyy&quot;)]" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: reklendirme yıl başlıgı, yeşil" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;2&quot;, 198, 224, 180}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_88" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: reklendirme boş satır, pembe" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;1&quot;, 248,203,173}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_89" />
                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="dt den gelen her bir kod için A kolonunda arama yapılır, bulunan hücre numarasına yukarıda bulunan kolona veri tek ek yazdırılır" DataTable="[dtYoklama]" DisplayName="For Each Row in Data Table: Verini Yazdırılması" sap:VirtualizedContainerService.HintSize="400,109" sap2010:WorkflowViewState.IdRef="ForEachRow_12">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,529" sap2010:WorkflowViewState.IdRef="Sequence_151">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Find Yoklama Kodu" EntryMethodName="findText" EntryMethodParameters="[{CurrentRow.Item(&quot;YSTIP&quot;).ToString.Trim, strSheetName, &quot;A3:A150&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_90" OutputValue="[objFindTex]" />
                              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_234">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[intColNumber]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[CInt(objFindTex.ToString.Substring(1))]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelWriteCell Cell="[strLastColName + intColNumber.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="[strSheetName]" Text="[CurrentRow.Item(&quot;SAYISI&quot;).ToString]" />
                              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_235">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[intToplam + CInt(CurrentRow.Item("SAYISI").ToString)]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEachRow>
                      <Sequence DisplayName="TOPLAM SATIRI" sap:VirtualizedContainerService.HintSize="400,81" sap2010:WorkflowViewState.IdRef="Sequence_152">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Find Yoklama Kodu" EntryMethodName="findText" EntryMethodParameters="[{&quot;TOPLAM&quot;, strSheetName, &quot;B3:B150&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_91" OutputValue="[objFindTex]" />
                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_236">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intColNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[CInt(objFindTex.ToString.Substring(1))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ExcelWriteCell Cell="[strLastColName +intColNumber.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="[strSheetName]" Text="[intToplam.ToString]" />
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Cerceve" EntryMethodName="AllBordersThinThick" EntryMethodParameters="[{strSheetName, strLastColName + &quot;2&quot; + &quot;:&quot; + strLastColName +intColNumber.ToString }]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_92" />
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Kolon genişliği" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, strLastColName + &quot;2&quot; + &quot;:&quot; + strLastColName +intColNumber.ToString }]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_93" />
                        <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_5" Range="A1" SheetName="[strSheetName]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ExcelSelectRange>
                      </Sequence>
                    </Sequence>
                    <Sequence DisplayName="Denetim Verisi" sap:VirtualizedContainerService.HintSize="462,81" sap2010:WorkflowViewState.IdRef="Sequence_186">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_237">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Kumulatif_Denetim</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_238">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA" EntryMethodName="findText" EntryMethodParameters="[{&quot;01.&quot; + Today.AddMonths(-1).ToString(&quot;yyyy&quot;) + &quot;-&quot; + &quot;12.&quot; +Today.AddMonths(-1).ToString(&quot;yyyy&quot;), strSheetName, &quot;A2:TY2&quot;}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_106" OutputValue="[objFindTex]" />
                      <If sap2010:Annotation.AnnotationText="A2:TX2 arasında arama yapılıyor. substring buna göra yazıldı" Condition="[objFindTex.ToString.Length = 2]" DisplayName="If: verini bulunduğu son kolon harfini" sap:VirtualizedContainerService.HintSize="400,94" sap2010:WorkflowViewState.IdRef="If_19">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_239">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strLastColName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[objFindTex.ToString.Substring(0,1)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Assign sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_240">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strLastColName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[objFindTex.ToString.Substring(0,2)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnNumberFromLetter workflow" sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnNumberFromLetter.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <OutArgument x:TypeArguments="x:Int32" x:Key="OutColumnNumber">[intColIndex]</OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="InColumnLetter">[strLastColName]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelGetColumnLetterFromNumber workflow" sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Framework\ExcelGetColumnLetterFromNumber.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_intColNumber">[intColIndex+1]</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_strColName">[strLastColName]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:ExcelWriteCell Cell="[strLastColName + &quot;2&quot;]" DisplayName="Write Cell: 01.yyyy-12.yyyy seklınde yıl yazılır" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="[strSheetName]" Text="[&quot;01.&quot; + Today.AddMonths(-1).ToString(&quot;yyyy&quot;) + &quot;-&quot; + &quot;12.&quot; +Today.AddMonths(-1).ToString(&quot;yyyy&quot;)]" />
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: reklendirme yıl başlıgı, yeşil" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;2&quot;, 198, 224, 180}]" sap:VirtualizedContainerService.HintSize="400,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_95">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeVBA>
                      <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: reklendirme boş satır, pembe" EntryMethodName="FillColor" EntryMethodParameters="[{strSheetName, strLastColName + &quot;1&quot;, 248,203,173}]" sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="InvokeVBA_96">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeVBA>
                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="dt den gelen her bir kod için A kolonunda arama yapılır, bulunan hücre numarasına yukarıda bulunan kolona veri tek ek yazdırılır" DataTable="[dtDenetim]" DisplayName="For Each Row in Data Table: Verini Yazdırılması" sap:VirtualizedContainerService.HintSize="400,109" sap2010:WorkflowViewState.IdRef="ForEachRow_13">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,529" sap2010:WorkflowViewState.IdRef="Sequence_154">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Find Yoklama Kodu" EntryMethodName="findText" EntryMethodParameters="[{CurrentRow.Item(&quot;YSTIP&quot;).ToString.trim, strSheetName, &quot;A3:A155&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_97" OutputValue="[objFindTex]" />
                              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_241">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[intColNumber]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[CInt(objFindTex.ToString.Substring(1))]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelWriteCell Cell="[strLastColName + intColNumber.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="[strSheetName]" Text="[CurrentRow.Item(&quot;SAYISI&quot;).ToString]" />
                              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_242">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[intToplam]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[intToplam + CInt(CurrentRow.Item("SAYISI").ToString)]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEachRow>
                      <Sequence DisplayName="TOPLAM SATIRI" sap:VirtualizedContainerService.HintSize="400,776" sap2010:WorkflowViewState.IdRef="Sequence_155">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeVBA CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Find Yoklama Kodu" EntryMethodName="findText" EntryMethodParameters="[{&quot;TOPLAM&quot;, strSheetName, &quot;B3:B150&quot;}]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_98" OutputValue="[objFindTex]" />
                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_243">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intColNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[CInt(objFindTex.ToString.Substring(1))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ExcelWriteCell Cell="[strLastColName +intColNumber.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="[strSheetName]" Text="[intToplam.ToString]" />
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Cerceve" EntryMethodName="AllBordersThinThick" EntryMethodParameters="[{strSheetName, strLastColName + &quot;2&quot; + &quot;:&quot; + strLastColName +intColNumber.ToString }]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_99" />
                        <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[strVBAFilePath]" DisplayName="Invoke VBA: Kolon genişliği" EntryMethodName="AutoColumnWidth" EntryMethodParameters="[{strSheetName, strLastColName + &quot;2&quot; + &quot;:&quot; + strLastColName +intColNumber.ToString }]" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_100" />
                        <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_6" Range="A1" SheetName="[strSheetName]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ExcelSelectRange>
                      </Sequence>
                    </Sequence>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
            <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="440,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_9" Workbook="[workbook]" />
            <AddToCollection x:TypeArguments="x:String" Collection="[io_strListAttachments]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="440,25" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[strOutputFilePath]" />
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
  </Sequence>
</Activity>